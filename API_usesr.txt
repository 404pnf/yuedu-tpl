用户接口API

数据类型：
Text      字符串
Numeric   数字
Array     数组 用 [ ] 表示

体例：

HTTP_Method  URL
  JSON Object

正文：

＃ 获取用户信息
＃ 服务器会判断出当前用户是谁，并返回相应信息
get '/user/show'
  {
    userName: "王大军",                       // Text
    gender: ["男|女", key]                   // [Text, Text]
    age: 12,                                // Numeric
    photo:  [ "http://placehold.it/100x100", key ],   //  [Text, Text]
    grade: [ '小学四年级',  key],            //  [Text, Text]
    school: '史家胡同小学',                  // Text
    email: 'ererer@fltrp.com',             // Text
    loginName: 'stu20'                     // Text
  }

＃ 获取用户可选头像
＃ 服务器会判断出当前用户是谁，并返回相应信息
＃ 或者返回固定可选头像
get '/user/photos'
  [
    ['photoURL_1', key_1],   //[Text, Text]
    ...,
    ['photoURL_n', key_n]
  ]

举例
  [
    [ "http://placehold.it/0.jpg", 0],
    ...,
    [ "http://placehold.it/1.jpg", 5]
  ]

＃ 获取用户可选年级
＃ 服务器会判断出当前用户是谁，并返回相应信息
＃ 或者返回固定可选年级
get '/user/grades'
  [
    ['schoolname_1', key_1],  // [Text, Text]
    ...,
    ['schoolname_n', key_n],
  ]

举例：

  [
    ['一年级', 1],
    ...,
    ['高三', 12]
  ]

＃ 提交用户信息给服务器
＃ 服务器会判断出当前用户是谁，并根据提交信息是否正确返回相应信息
post '/user/save'

提交信息格式
  {
    userName: "王大军",
    gender: 'key',
    age: 12,
    photo: 'key',
    grade: 'key',
    school: '史家胡同小学',
    email: 'ererer@fltrp.com',
    loginName: 'stu20'
  }


提交后得到的返回信息。

  {
    success: '成功啦',  // Text
    error: '错误',      // Text
    warn: '警告',       // Text
    info: '信息'        // Text
  }

这四个键名来自boostrap，也就是说它们是最常用表示状态信息的英文。

success: 已保存信息，一切正常
error: 用户提交的信息有错误，请给出具体错误
warn: 警告信息，如信用卡已经过期了，请即时更新
info: 附加信息，如某个字段虽不是必填，但如果您填写了能参与抽奖或有更个性化服务

如果服务器认为提交的信息完全正确，必须返回含有success键的对象。可以没有内容。

举例：
  {
    success: ''
  }

除了error和success是互斥的，返回对象的键可任意组合。

举例：
  {
    error: 'text',
    warn: 'text'
  }

  {
    sucess: 'text',
    info: 'text',
    warn: 'text'
  }


